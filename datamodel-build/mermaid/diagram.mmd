classDiagram
Amount -- UnitEnum
Amount -- UnitDimensionEnum


class Amount {

  number value
  UnitEnum unit
  UnitDimensionEnum unitDimension

}

class CompositionOperatorEnum {
<<enumeration>>
  o and
  o or
}

InsurancePayout -- PayoutTypeEnum
InsurancePayout -- Amount
InsurancePayout -- Multiplier
InsurancePayout -- PayoutScopeServiceEnum
InsurancePayout -- CompositionOperatorEnum


class InsurancePayout {

  PayoutTypeEnum payoutType
  Amount amount
  Amount minimalAmount
  Multiplier multipliers
  PayoutScopeServiceEnum[] for
  CompositionOperatorEnum forComposition
  boolean isExtra

}

Multiplier -- MultiplierTimeEnum
Multiplier -- MultiplierPersonEnum
Multiplier -- MultiplierOccurenceEnum
Multiplier -- MultiplierInsuredObjectEnum


class Multiplier {

  MultiplierTimeEnum time
  MultiplierPersonEnum person
  MultiplierOccurenceEnum occurence
  MultiplierInsuredObjectEnum insuredObject

}

class MultiplierOccurenceEnum {
<<enumeration>>
  o perClaim
  o perLine
  o perIncident
}

class MultiplierPersonEnum {
<<enumeration>>
  o perPerson
  o perPassenger
  o perEmployee
  o perLoneTraveler
}

class MultiplierTimeEnum {
<<enumeration>>
  o perMinutes
  o perHour
  o perDay
  o perMonth
  o perCalendarMonth
  o perYear
  o perPeriodOfInsurance
}

class PayoutScopeServiceEnum {
<<enumeration>>
  o indemnity
  o legalCost
  o legalExpenses
  o windscreenRepair
  o windscreenReplacement
  o carStorageFee
  o travelingCost
  o courtesyCar
  o carHire
  o alternativeTransport
  o towing
  o overnightAccomodation
  o bedAndBreakfast
}

class PayoutTypeEnum {
<<enumeration>>
  o Limit
  o Excess
  o Deductible
  o Franchise
  o StrictLimit
}

class UnitDimensionEnum {
<<enumeration>>
  o Monetary
  o Time
  o Distance
  o Person
}

UnitEnum o-- UnitDistanceEnum
  class UnitDistanceEnum {
<<enumeration>>
  o kilometer
  o miles
}

UnitEnum o-- UnitMonetaryEnum
  class UnitMonetaryEnum {
<<enumeration>>
  o EUR
  o GBP
}

UnitEnum o-- UnitPersonEnum
  class UnitPersonEnum {
<<enumeration>>
  o person
  o passenger
  o driver
  o policyholder
}

UnitEnum o-- UnitTimeEnum
  class UnitTimeEnum {
<<enumeration>>
  o day
  o consecutiveDay
  o night
}
